/*
Translator service between a srb2kart server and json

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FileNeededInner struct for FileNeededInner
type FileNeededInner struct {
	WillSend *bool `json:"WillSend,omitempty"`
	TotalSize *float32 `json:"TotalSize,omitempty"`
	FileName *string `json:"FileName,omitempty"`
	MD5 []float32 `json:"MD5,omitempty"`
}

// NewFileNeededInner instantiates a new FileNeededInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileNeededInner() *FileNeededInner {
	this := FileNeededInner{}
	return &this
}

// NewFileNeededInnerWithDefaults instantiates a new FileNeededInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileNeededInnerWithDefaults() *FileNeededInner {
	this := FileNeededInner{}
	return &this
}

// GetWillSend returns the WillSend field value if set, zero value otherwise.
func (o *FileNeededInner) GetWillSend() bool {
	if o == nil || o.WillSend == nil {
		var ret bool
		return ret
	}
	return *o.WillSend
}

// GetWillSendOk returns a tuple with the WillSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileNeededInner) GetWillSendOk() (*bool, bool) {
	if o == nil || o.WillSend == nil {
		return nil, false
	}
	return o.WillSend, true
}

// HasWillSend returns a boolean if a field has been set.
func (o *FileNeededInner) HasWillSend() bool {
	if o != nil && o.WillSend != nil {
		return true
	}

	return false
}

// SetWillSend gets a reference to the given bool and assigns it to the WillSend field.
func (o *FileNeededInner) SetWillSend(v bool) {
	o.WillSend = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *FileNeededInner) GetTotalSize() float32 {
	if o == nil || o.TotalSize == nil {
		var ret float32
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileNeededInner) GetTotalSizeOk() (*float32, bool) {
	if o == nil || o.TotalSize == nil {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *FileNeededInner) HasTotalSize() bool {
	if o != nil && o.TotalSize != nil {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given float32 and assigns it to the TotalSize field.
func (o *FileNeededInner) SetTotalSize(v float32) {
	o.TotalSize = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *FileNeededInner) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileNeededInner) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *FileNeededInner) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *FileNeededInner) SetFileName(v string) {
	o.FileName = &v
}

// GetMD5 returns the MD5 field value if set, zero value otherwise.
func (o *FileNeededInner) GetMD5() []float32 {
	if o == nil || o.MD5 == nil {
		var ret []float32
		return ret
	}
	return o.MD5
}

// GetMD5Ok returns a tuple with the MD5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileNeededInner) GetMD5Ok() ([]float32, bool) {
	if o == nil || o.MD5 == nil {
		return nil, false
	}
	return o.MD5, true
}

// HasMD5 returns a boolean if a field has been set.
func (o *FileNeededInner) HasMD5() bool {
	if o != nil && o.MD5 != nil {
		return true
	}

	return false
}

// SetMD5 gets a reference to the given []float32 and assigns it to the MD5 field.
func (o *FileNeededInner) SetMD5(v []float32) {
	o.MD5 = v
}

func (o FileNeededInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WillSend != nil {
		toSerialize["WillSend"] = o.WillSend
	}
	if o.TotalSize != nil {
		toSerialize["TotalSize"] = o.TotalSize
	}
	if o.FileName != nil {
		toSerialize["FileName"] = o.FileName
	}
	if o.MD5 != nil {
		toSerialize["MD5"] = o.MD5
	}
	return json.Marshal(toSerialize)
}

type NullableFileNeededInner struct {
	value *FileNeededInner
	isSet bool
}

func (v NullableFileNeededInner) Get() *FileNeededInner {
	return v.value
}

func (v *NullableFileNeededInner) Set(val *FileNeededInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFileNeededInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFileNeededInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileNeededInner(val *FileNeededInner) *NullableFileNeededInner {
	return &NullableFileNeededInner{value: val, isSet: true}
}

func (v NullableFileNeededInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileNeededInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


