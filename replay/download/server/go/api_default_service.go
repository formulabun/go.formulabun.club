/*
 * GoBun replay download
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"bytes"
	"context"
	"encoding/binary"
	"errors"
	"io"
	"net/http"
	"os"
	"path"

	"GoBun/srb2kart/lump"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// ReplayIdGet - Get a replay
func (s *DefaultApiService) ReplayIdGet(ctx context.Context, id string) (ImplResponse, error) {
	filePath := path.Join("/data", id)
	file, err := os.Open(filePath)
	if err != nil {
		return Response(http.StatusNotFound, nil, "temp.lmp"), err
	}
	

	replay, err := lump.ReadReplay(file)
	if err != nil {
		return Response(http.StatusInternalServerError, nil, ""), err
	}
	fileName := replay.GetTitle() + ".lmp"

	var headerBuffer bytes.Buffer
	binary.Write(&headerBuffer, binary.LittleEndian, replay)
	if err != nil {
		return Response(http.StatusInternalServerError, nil, ""), err
	}

	fileData := io.MultiReader(&headerBuffer, file)
	return Response(http.StatusOK, fileData, fileName), err
}

// StaffGet - Get a replay as staff
func (s *DefaultApiService) StaffGet(ctx context.Context, ids []string) (ImplResponse, error) {
	// TODO - update StaffGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, *os.File{}) or use other options such as http.Ok ...
	//return Response(200, *os.File{}), nil

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(206, *os.File{}) or use other options such as http.Ok ...
	//return Response(206, *os.File{}), nil

	return Response(http.StatusNotImplemented, nil, ""), errors.New("StaffGet method not implemented")
}
